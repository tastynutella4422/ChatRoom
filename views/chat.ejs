<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.1/css/all.min.css" integrity="sha256-mmgLkCYLUQbXn0B1SRqzHar6dCnv9oZFPEC1g1cwlkk=" crossorigin="anonymous" />
  <link rel="stylesheet" href="/chatbox.css">
  <title>ChatCord App</title>
</head>
<body>
  <div class="chat-container">
    <header class="chat-header">
      <h1><i class="fas fa-sad-cry"></i> ChatRoom</h1>
      <a href="/route/rooms" class="btn">Leave Room</a>
    </header>
    <main class="chat-main">
      <div class="chat-sidebar">
        <h3><i class="fas fa-comments"></i> Room Name:</h3>
        <h2 id="room-name"></h2>
        <h3><i class="fas fa-users"></i> Users</h3>
        <ul id="users"></ul>
      </div>
      <div class="chat-messages">
      </div>
    </main>
    <div class="chat-form-container">
      <form id="chat-form">
        <input
          id="msg"
          type="text"
          placeholder="Enter Message"
          required
          autocomplete="off"
        />
        <button class="btn"><i class="fas fa-paper-plane"></i> Send</button>
      </form>
    </div>
  </div>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/qs/6.11.0/qs.min.js" integrity="sha512-/l6vieC+YxaZywUhmqs++8uF9DeMvJE61ua5g+UK0TuHZ4TkTgB1Gm1n0NiA86uEOM9JJ6JUwyR0hboKO0fCng==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <script src="/socket.io/socket.io.js"></script>
  <script>
  const chatform = document.getElementById('chat-form');
  const chatMessages = document.querySelector('.chat-messages');
  const roomName = document.getElementById('room-name')
  const userList = document.getElementById('users')

  const socket = io();

  //message from server
  socket.on('message', message => {
    console.log(message);
    outputMessage(message);

  // socket.on('room_name', roomname => {
  //   console.log(roomname)
  // })

    //Scroll down functionality
    chatMessages.scrollTop = chatMessages.scrollHeight;
  });

  chatform.addEventListener('submit', (e) => {
    e.preventDefault();
    // Get message text
    const msg = e.target.elements.msg.value;
    //emit message to server
    socket.emit('chatMessage', msg)
    //clear input box
    e.target.elements.msg.value = '';
    e.target.elements.msg.focus();

  });
  function outputMessage(message) {
    const div = document.createElement('div');
    div.classList.add('message');
    div.innerHTML = `<p class="meta">${message.username}<span>${message.time}</span></p><p class="text">${message.text}</p>`;
    document.querySelector('.chat-messages').appendChild(div);
    } 

  const {username, room} = Qs.parse(location.search, {
    ignoreQueryPrefix: true
  });

  socket.emit('joinRoom',{username, room})

  // Get room and users
  socket.on('roomUsers', ({room, users}) => {
    outputRoomName(room);
    outputUsers(users)
  })

  // Add room name to DOM
  function outputRoomName(room) {
    roomName.innerText = room;
  }

  function outputUsers(users) {
    userList.innerHTML = `${users.map(user=> `<li>${user.username}</li>`).join('')}`;
  }

  console.log(username, room)

  </script>
</body>
</html>